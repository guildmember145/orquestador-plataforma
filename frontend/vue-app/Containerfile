# Etapa 1: Construcción (builder)
FROM node:24-alpine AS builder
WORKDIR /app

# Instalar pnpm
RUN npm install -g pnpm

# Copiar archivos de manifiesto y lockfile para cachear dependencias
COPY package.json pnpm-lock.yaml ./

# Instalar todas las dependencias
RUN pnpm install --frozen-lockfile

# Copiar todo el código fuente de la aplicación
COPY . .

# --- INICIO DE LA MODIFICACIÓN CLAVE ---
# En lugar de 'RUN pnpm build', ejecutamos los dos pasos por separado

# Paso 1 del build: Solo verificación de tipos.
# Usamos 'pnpm exec vue-tsc' y el flag '--noEmit' para asegurarnos de que solo revise los tipos
# y no intente "emitir" archivos, lo cual evita el error TS6310.
RUN pnpm exec vue-tsc --noEmit

# Paso 2 del build: Vite se encarga de empaquetar la aplicación para producción.
RUN pnpm exec vite build
# --- FIN DE LA MODIFICACIÓN CLAVE ---


# Etapa 2: Servir la aplicación (runtime) - Sin cambios aquí
FROM node:24-alpine
WORKDIR /app

# Copiar los artefactos necesarios desde la etapa de construcción
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Exponer el puerto que Vite Preview usará
EXPOSE 4173

# Usar npx para ejecutar vite preview. Es la forma más robusta.
CMD ["npx", "vite", "preview", "--host", "--port", "4173"]